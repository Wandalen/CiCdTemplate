
name : auto_merge_to_beta

on :
  push :
    branches : [ alpha ]

concurrency :

  group : auto_merge_to_beta
  cancel-in-progress : true

jobs :

  get_modules:
    outputs :
      workflow_files: ${{ steps.workflow_files.outputs.files }}
      workflow_names: ${{ steps.workflow_names.outputs.names }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: workflow_files
        run: |
          WORKFLOWS=$(ls .github/workflows | grep Module)
          for WORKFLOW in $WORKFLOWS ; do
            NAME=$(echo $WORKFLOW | sed 's/\(\S\+\).yml/\1/')
            NAMES="$NAMES $NAME"
          done;
          NAMES=$(sed 's/\s\+/\n/g' <<< $NAMES)
          OUTPUT=$(echo "$NAMES" | jq -R -s -c 'split("\n")[1:-1]')
          echo "::set-output name=files::{\"modules\":$OUTPUT}"
      - id: workflow_names
        run: |
          WORKFLOWS=$(ls .github/workflows | grep Module)
          for WORKFLOW in $WORKFLOWS ; do
            NAME=$(cat .github/workflows/$WORKFLOW | grep -G '^name :' | sed 's/name\s*:\s\+\(\S*\)/\1/')
            NAMES="$NAMES%0A$NAME"
          done;
          echo "::set-output name=names::$NAMES"

  wait_for_modules :
    needs : get_modules
    runs-on : ubuntu-latest
    steps :
      - name : Waiting ...
        uses : willgarcia/workflow-wait-action@main
        with :
          timeout : 21600
          interval : 60
          initial_delay : 60
          workflows : ${{ needs.get_modules.outputs.workflow_names }}

  check :
    needs :
      - get_modules
      - wait_for_modules
    strategy :
      matrix : ${{ fromJSON( needs.get_modules.outputs.workflow_files ) }}
    outputs :
      has_succeeded_runs : ${{ steps.success.outputs.success }}
    runs-on : ubuntu-latest
    steps :
      - name : Check workflow run status
        id : check_ci
        uses :  LASER-Yi/workflow-status@v0.1.0
        with :
          token : ${{ secrets.GITHUB_TOKEN }}
          workflow : ${{ matrix.modules }}.yml
          event : push
          branch : alpha
      - name : Check failure conclusion
        if : ${{ steps.check_ci.outputs.conclusion == 'failure' }}
        run : exit 1
      - name : Check cancelled conclusion
        if : ${{ steps.check_ci.outputs.conclusion == 'cancelled' }}
        run : exit 1
      - name : Check success conclusion and setup output
        if : ${{ steps.check_ci.outputs.conclusion == 'success' }}
        id : success
        run: echo "::set-output name=success::true"

  merge :
    needs : check
    if : ${{ success() && needs.check.outputs.has_succeeded_runs == 'true' }}
    runs-on : ubuntu-latest
    steps :
      - name : Find PR number for current commit
        uses : jwalton/gh-find-current-pr@v1
        id : find
        with :
          state: open
      - name: Automerge passed pull request
        if : ${{ success() }}
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.PRIVATE_GITHUB_BOT_TOKEN }}
          number: ${{ steps.find.outputs.number }}
          method: merge

  skipped_runs_check :
    needs : check
    if : ${{ success() }}
    runs-on : ubuntu-latest
    steps :
      - name : Failure if skipped
        if : ${{ needs.check.outputs.has_succeeded_runs != 'true' }}
        run : exit 1
      - name : Success if not skipped
        if : ${{ needs.check.outputs.has_succeeded_runs == 'true' }}
        run : exit 0

